{"version":3,"file":"static/js/888.cab43dbb.chunk.js","mappings":"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","sources":["components/table/TableWrapper.jsx","components/tabs/erfsTabs/tabsMap/TabsErfsClusterMap.jsx","components/tabs/erfsTabs/tabsTable/TabsErfsTable.jsx","components/tabs/erfsTabs/TabsErfs.jsx"],"sourcesContent":["import React from 'react'\r\nimport './TableWrapper.css'\r\n\r\nconst TableWrapper = (props) => {\r\n  return (\r\n    <div className='table-wrapper' >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableWrapper","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport \"./TabsErfsClusterMap.css\";\r\n// import ratandab from \"../../../../data/cadastral/lesedi/ratandab.geojson\";\r\nimport lesediObedNkosiA from \"../../../../data/cadastral/lesedi/ObedNkosi/lesediObedNkosiA.geojson\";\r\nimport lesediObedNkosiB from \"../../../../data/cadastral/lesedi/ObedNkosi/lesediObedNkosiB.geojson\";\r\nimport lesediObedNkosiC from \"../../../../data/cadastral/lesedi/ObedNkosi/lesediObedNkosiC.geojson\";\r\nimport useModal from \"../../../../hooks/useModal\";\r\nimport useGeoLocation from \"../../../../hooks/useGeolocation\";\r\nimport { AreaTreeContext } from \"../../../../contexts/AreaTreeContext\";\r\n\r\nconst Marker = ({ children }) => children;\r\n\r\nconst areaCenter = {\r\n\t\"Obed Nkosi A\": { lat: -26.541960658447646, lng: 28.338629116440828 },\r\n\t\"Obed Nkosi B\": { lat: -26.52888160075503, lng: 28.3352936276032 },\r\n\t\"Obed Nkosi C\": { lat: -26.532998883501552, lng: 28.345134598723572 },\r\n};\r\n\r\nexport function TabsErfsClusterMap(props) {\r\n\t// console.log(`props`, props);\r\n\r\n\tconst { area } = useContext(AreaTreeContext);\r\n\t// console.log(`area`, area);\r\n\r\n\tconst mapRef = useRef();\r\n\t// console.log(`mapRef`, mapRef);\r\n\r\n\tconst { openModal } = useModal();\r\n\r\n\tconst [erfs, setErfs] = useState(props.rowData);\r\n\t// console.log(`erfs`, erfs);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetErfs(props.rowData);\r\n\t}, [props.rowData]);\r\n\r\n\t// get user location\r\n\tconst { setGeolocation, userGps } = useGeoLocation();\r\n\t// console.log(`userGps`, userGps);\r\n\r\n\t// setGeolocation();\r\n\r\n\tconst points = erfs?.map(erf => {\r\n\t\t// console.log(`erf`, erf);\r\n\t\t// const lat = erf.address.gps.latitude;\r\n\t\t// const lng = erf.address.gps.longitude;\r\n\r\n\t\treturn {\r\n\t\t\ttype: \"Feature\",\r\n\t\t\tproperties: { cluster: false, erfId: erf.id, erf: erf },\r\n\t\t\tgeometry: {\r\n\t\t\t\ttype: \"Point\",\r\n\t\t\t\tcoordinates: [\r\n\t\t\t\t\tparseFloat(erf.address.gps.longitude),\r\n\t\t\t\t\tparseFloat(erf.address.gps.latitude),\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n\t// console.log(`points`, points);\r\n\r\n\tconst [bounds, setBounds] = useState([]);\r\n\t// console.log(`bounds`, bounds);\r\n\tconst [zoom, setZoom] = useState(10);\r\n\t// console.log(`zoom`, zoom)\r\n\r\n\t// console.log(`######################################################`);\r\n\t// console.log(`bounds`, bounds);\r\n\t// console.log(`zoom`, zoom);\r\n\r\n\tconst result = useSupercluster({\r\n\t\tpoints,\r\n\t\tbounds,\r\n\t\tzoom,\r\n\t\toptions: { radius: 75, maxZoom: 20 },\r\n\t});\r\n\r\n\tconst { clusters, supercluster } = result;\r\n\t// console.log(`clusters`, clusters);\r\n\t// console.log(`supercluster`, supercluster);\r\n\r\n\t// erf search/filter *************************************************\r\n\r\n\tconst [selectedErf, setSelectedErf] = useState(\"\");\r\n\t// console.log(`selectedErf`, selectedErf);\r\n\tconst [erfSearch, setErfSearch] = useState(\"\");\r\n\t// console.log(`erfSearch`, erfSearch);\r\n\tconst [filteredErfs, setFilteredErfs] = useState(\"\");\r\n\t// console.log(`filteredErfs`, filteredErfs);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(`erfs`, erfs);\r\n\t\tconst filteredErfs = erfs?.filter(erf => erf.erfNo.includes(erfSearch));\r\n\t\t// console.log(`filteredErfs`, filteredErfs);\r\n\t\tsetFilteredErfs(filteredErfs);\r\n\t}, [erfSearch]);\r\n\r\n\t// console.log(`erfSearch.length`, erfSearch.length);\r\n\tconst hideShow = erfSearch?.length > 0 ? \"show-erfs\" : \"hide-erfs\";\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedErf) {\r\n\t\t\tconst lat = selectedErf?.address?.gps?.latitude;\r\n\t\t\tconst lng = selectedErf?.address?.gps?.longitude;\r\n\t\t\t// console.log(`mapRef.current`, mapRef.current);\r\n\t\t\t// console.log(`zoom`, zoom);\r\n\t\t\tmapRef.current?.panTo({ lat, lng });\r\n\t\t\tmapRef.current?.setZoom(20);\r\n\t\t}\r\n\t}, [selectedErf]);\r\n\r\n\tconst selectErf = erf => {\r\n\t\t// console.log(`erf`, erf);\r\n\t\tsetSelectedErf(erf);\r\n\t};\r\n\r\n\tconst onMapLoad = mapObjects => {\r\n\t\t// console.log(`myMapObjects`, mapObjects);\r\n\t\tconst { map, maps } = mapObjects;\r\n\t\t// console.log(`mapRef`, mapRef);\r\n\t\tmapRef.current = map;\r\n\t\t// console.log(`mapRef`, mapRef);\r\n\r\n\t\t// const fileSelected = selectedArea[area.name];\r\n\t\t// console.log(`fileSelected`, fileSelected);\r\n\r\n\t\t// mapRef.current?.data?.loadGeoJson(fileSelected);\r\n\r\n\t\tmapRef.current?.data?.setStyle({\r\n\t\t\tfillOpacity: 0.0,\r\n\t\t});\r\n\t\t// mapRef.data.addListener(\"click\", handleErfClick);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(`area`, area);\r\n\t\t// console.log(`mapRef.current?.data`, mapRef.current?.data);\r\n\t\t// console.log(`mapRef.current`, mapRef.current);\r\n\t\t// const fileSelected = selectedArea[area.name];\r\n\t\t// console.log(`fileSelected`, fileSelected);\r\n\t\tmapRef.current?.data?.forEach(function (feature) {\r\n\t\t\t// console.log(`feature`, feature);\r\n\t\t\tmapRef.current?.data.remove(feature);\r\n\t\t});\r\n\r\n\t\tif (area?.name === \"Obed Nkosi A\") {\r\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiA);\r\n\t\t}\r\n\t\tif (area?.name === \"Obed Nkosi B\") {\r\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiB);\r\n\t\t}\r\n\t\tif (area?.name === \"Obed Nkosi C\") {\r\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiC);\r\n\t\t}\r\n\t\tif (area?.name === \"Obed Mthombeni Nkosi\") {\r\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiA);\r\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiB);\r\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiC);\r\n\t\t}\r\n\t}, [area]);\r\n\r\n\t// this will fire everytime there is a click on the marker\r\n\tconst handleMarkerClick = (id, lat, lng) => {\r\n\t\tmapRef.current?.panTo({ lat, lng });\r\n\r\n\t\t// get erf data using erf id\r\n\t\tconst erf = erfs.find(erf => erf.id === id);\r\n\t\t// console.log(`erf`, erf);\r\n\r\n\t\tif (erf) {\r\n\t\t\topenModal({\r\n\t\t\t\tmodalName: \"tabsErfMapInfoWrapper\",\r\n\t\t\t\tpayload: erf,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// map options\r\n\tvar options = {\r\n\t\t// panControl: true,\r\n\t\t// zoomControl: true,\r\n\t\tmapTypeControl: true,\r\n\t\t// scaleControl: true,\r\n\t\t// streetViewControl: true,\r\n\t\toverviewMapControl: true,\r\n\t\trotateControl: true,\r\n\t\tfullscreenControl: false,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"tabs-erfs-map\">\r\n\t\t\t<div className=\"search-box\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"erf-search\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\" enter erf no\"\r\n\t\t\t\t\tonChange={e => setErfSearch(e.target.value)}\r\n\t\t\t\t\tvalue={erfSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={`search-dropdown ${hideShow} `}>\r\n\t\t\t\t\t{filteredErfs &&\r\n\t\t\t\t\t\tfilteredErfs?.map(erf => {\r\n\t\t\t\t\t\t\t// console.log(`erf`, erf);\r\n\t\t\t\t\t\t\tconst erfNo = erf?.erfNo;\r\n\t\t\t\t\t\t\tconst unitName = erf.propertyType?.unitName\r\n\t\t\t\t\t\t\t\t? `| ${erf.propertyType?.unitName}`\r\n\t\t\t\t\t\t\t\t: \"\";\r\n\t\t\t\t\t\t\tconst unitNo = erf.propertyType?.unitNo\r\n\t\t\t\t\t\t\t\t? `| ${erf.propertyType?.unitNo}`\r\n\t\t\t\t\t\t\t\t: \"\";\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<p key={erf.id} onClick={() => selectErf(erf)}>\r\n\t\t\t\t\t\t\t\t\t{`${erfNo} ${unitName} ${unitNo} `}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<GoogleMapReact\r\n\t\t\t\tbootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\r\n\t\t\t\tdefaultCenter={{ lat: -26.541960658447646, lng: 28.338629116440828 }}\r\n\t\t\t\tcenter={areaCenter[area.name]}\r\n\t\t\t\tdefaultZoom={16}\r\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\r\n\t\t\t\tonGoogleApiLoaded={onMapLoad}\r\n\t\t\t\tonChange={args => {\r\n\t\t\t\t\tconsole.log(`args`, args);\r\n\t\t\t\t\tconst { zoom, bounds } = args;\r\n\t\t\t\t\tsetZoom(zoom);\r\n\t\t\t\t\tsetBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\r\n\t\t\t\t}}\r\n\t\t\t\toptions={options}\r\n\t\t\t>\r\n\t\t\t\t{clusters.map(cluster => {\r\n\t\t\t\t\t// console.log(`cluster?.properties?.erf`, cluster?.properties?.erf);\r\n\r\n\t\t\t\t\tconst anomaly = false;\r\n\r\n\t\t\t\t\tconst [longitude, latitude] = cluster.geometry.coordinates;\r\n\t\t\t\t\tconst { cluster: isCluster, point_count: pointCount } = cluster.properties;\r\n\t\t\t\t\tconst erfNo = cluster?.properties?.erf?.erfNo;\r\n\t\t\t\t\tconst id = cluster?.properties?.erf?.id;\r\n\t\t\t\t\tconst hasAsts =\r\n\t\t\t\t\t\tcluster?.properties?.erf?.asts?.length > 0 ? \"has-asts\" : \"\";\r\n\r\n\t\t\t\t\tif (cluster?.properties?.erf?.asts?.length > 0) {\r\n\t\t\t\t\t\t// console.log(`erf with asts`, cluster?.properties?.erf);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst hasAnomaly = anomaly ? \"has-anomaly\" : \"\";\r\n\r\n\t\t\t\t\tif (isCluster) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Marker key={`${cluster.id}`} lat={latitude} lng={longitude}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"cluster-marker\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: `${10 + (pointCount / points.length) * 20}px`,\r\n\t\t\t\t\t\t\t\t\t\theight: `${10 + (pointCount / points.length) * 20}px`,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tconst expansionZoom = Math.min(\r\n\t\t\t\t\t\t\t\t\t\t\tsupercluster.getClusterExpansionZoom(cluster.id),\r\n\t\t\t\t\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tmapRef.current.setZoom(expansionZoom);\r\n\t\t\t\t\t\t\t\t\t\tmapRef.current.panTo({ lat: latitude, lng: longitude });\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{pointCount}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tkey={`${cluster.properties.erfId}`}\r\n\t\t\t\t\t\t\tlat={latitude}\r\n\t\t\t\t\t\t\tlng={longitude}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName={`erf-marker`}\r\n\t\t\t\t\t\t\t\tonClick={() => handleMarkerClick(id, latitude, longitude)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span className={`erf-no ${hasAsts} ${hasAnomaly}`}>{erfNo}</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t{/* <Marker\r\n\t\t\t\t\tposition={{ lat: userGps.coordinates.lat, lng: userGps.coordinates.lng }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"userGpsPosition\"></div>\r\n\t\t\t\t</Marker> */}\r\n\t\t\t</GoogleMapReact>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./tabsErfsTable.css\";\r\n\r\nimport \"react-tippy/dist/tippy.css\";\r\nimport Table from \"../../../table/Table\";\r\nimport TableAddRecordBtn from \"../../../table/tableBtns/TableAddRecordBtn\";\r\nimport TableWrapper from \"../../../table/TableWrapper\";\r\n\r\nconst showTableAddRecordBtn = (ml1, ml2, ml3, nfd, fn) => {\r\n\tif (ml1 === \"asts\" || ml1 === \"trns\" || ml1 === \"erfs\") return null;\r\n\treturn <TableAddRecordBtn nfd={nfd} fn={fn} />;\r\n};\r\n\r\nconst TabsErfsTable = props => {\r\n\t// console.log(`props`, props);\r\n\tconst { ml1, tn, ml3, nfd, fn, rowData, columnDefs, setSelectedRows } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TableWrapper rowData={rowData} columnDefs={columnDefs} ml1={ml1}>\r\n\t\t\t\t<Table\r\n\t\t\t\t\trowData={rowData}\r\n\t\t\t\t\tcolumnDefs={columnDefs}\r\n\t\t\t\t\tsetSelectedRows={setSelectedRows}\r\n\t\t\t\t\tml1={ml1}\r\n\t\t\t\t/>\r\n\t\t\t</TableWrapper>\r\n\r\n\t\t\t{showTableAddRecordBtn(ml1, tn, ml3, nfd, fn)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TabsErfsTable;\r\n\r\n// TODO: mouse over tips on the table skipHeader\r\n","import { Timestamp } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { timestamp } from \"../../../firebaseConfig/fbConfig\";\r\nimport useAuthContext from \"../../../hooks/useAuthContext\";\r\nimport useModal from \"../../../hooks/useModal\";\r\nimport { formSects } from \"../../forms/formComponents/formSections/formSects\";\r\nimport \"./TabsErfs.css\";\r\nimport { TabsErfsClusterMap } from \"./tabsMap/TabsErfsClusterMap\";\r\n// import TabsErfsMap from \"./tabsMap/TabsErfsMap\";\r\nimport TabsErfsTable from \"./tabsTable/TabsErfsTable\";\r\nimport TabsErfsTree from \"./tabsTree/TabsErfsTree\";\r\n\r\n// prepare asts for trn by going to th erf and get each ast in the erf and prepare an array of all of them\r\nconst getTrnObjectsArray = erf => {\r\n\tconsole.log(`erf`, erf);\r\n\r\n\t// an erf already has an array of all asts in it. They are in asts property. Go inside asts property and extract needed astData as well as catInstallation ( and catCommissining data if it there).\r\n\r\n\t// step 1: destructire asts array\r\n\tconst { asts } = erf;\r\n\tconsole.log(`asts`, asts);\r\n\r\n\tif (!asts) return null;\r\n\r\n\t// create astData object. THis will go into trn inspection object\r\n\tconst astData = {};\r\n\r\n\t// step 2: iterate through asts to get each ast\r\n\tasts &&\r\n\t\tasts.forEach(ast => {\r\n\t\t\t// console.log(`ast---------------------------------`, ast);\r\n\r\n\t\t\t// destructure astId\r\n\t\t\tconst { astId } = ast;\r\n\t\t\tconsole.log(`astId`, astId);\r\n\r\n\t\t\t// get astCat from ast\r\n\t\t\tconst astCat = ast.astData.astCartegory;\r\n\t\t\t// console.log(`astCat`, astCat);\r\n\r\n\t\t\t// get trnData from formSects and insert into ast\r\n\t\t\tconst { trnData } = formSects[astCat].inspection;\r\n\t\t\t// console.log(`trnData`, trnData);\r\n\r\n\t\t\t// insrt into ast\r\n\t\t\tast = {\r\n\t\t\t\t...ast,\r\n\t\t\t\ttrnData,\r\n\t\t\t};\r\n\r\n\t\t\tif (astCat) {\r\n\t\t\t\tif (!astData[astCat]) {\r\n\t\t\t\t\t// we dont have astData[astCat], create it\r\n\t\t\t\t\tastData[astCat] = [];\r\n\t\t\t\t\t// console.log(`astData[astCat]`, astData[astCat]);\r\n\r\n\t\t\t\t\t// remove trnMetaData rom ast\r\n\t\t\t\t\tdelete ast.trnMetaData;\r\n\t\t\t\t\t// console.log(`ast`, ast);\r\n\r\n\t\t\t\t\t// push trnObject into astData[astCat]\r\n\t\t\t\t\tastData[astCat].push(ast);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// console.log(`astCat [${astCat}] alrerady EXIST in the mix`);\r\n\r\n\t\t\t\t\t// we already have astData[astCat]. Check is astId is already present in astData[astCat].\r\n\t\t\t\t\tconst astIdExist = astData[astCat].some(ast => ast.astId === astId);\r\n\t\t\t\t\tif (astIdExist) {\r\n\t\t\t\t\t\t// There already is astId in the mix\r\n\t\t\t\t\t\t// console.log(`There is astId`, astId);\r\n\r\n\t\t\t\t\t\t// removeastData and trnMetaData rom ast\r\n\t\t\t\t\t\tdelete ast.trnMetaData;\r\n\t\t\t\t\t\tdelete ast.astData;\r\n\t\t\t\t\t\tdelete ast.astId;\r\n\t\t\t\t\t\t// console.log(`ast`, ast);\r\n\r\n\t\t\t\t\t\t// extract data\r\n\t\t\t\t\t\tconst astTrnName = Object.entries(ast)[0][0];\r\n\t\t\t\t\t\t// console.log(`astTrnName`, astTrnName);\r\n\r\n\t\t\t\t\t\t// fint the index of the existing astId\r\n\t\t\t\t\t\tconst astIdIndex = astData[astCat].findIndex(ast => ast.astId === astId);\r\n\t\t\t\t\t\t// console.log(`astIdIndex`, astIdIndex);\r\n\r\n\t\t\t\t\t\t// insert ast into astData.[astCat][index]\r\n\t\t\t\t\t\tastData[astCat][astIdIndex] = {\r\n\t\t\t\t\t\t\t...astData[astCat][astIdIndex],\r\n\t\t\t\t\t\t\t[astTrnName]: ast[astTrnName],\r\n\t\t\t\t\t\t\t// trnData\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t// astData[astCat].with(Number(astIdIndex), ast[`${astCat}Commissioning`] );\r\n\t\t\t\t\t\t// console.log(`astData[astCat][astIdIndex]`, astData[astCat][astIdIndex]);\r\n\t\t\t\t\t\t// console.log(`astData[${astCat}]`, astData[astCat]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// there is no astId yet\r\n\t\t\t\t\t\t// console.log(`There is NO astId`, astId);\r\n\t\t\t\t\t\t// push trnObject into astData[astCat]\r\n\t\t\t\t\t\tastData[astCat].push(ast);\r\n\t\t\t\t\t\t// console.log(`astData[astCat]`, astData[astCat]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t// console.log(`astData`, astData);\r\n\r\n\treturn astData;\r\n};\r\n\r\n// create a trn for each row {metaData, erfData, tranData}\r\nconst getNewTrnsArray = (selectedRows, trnType, user) => {\r\n\t// console.log(`selectedRows`, selectedRows);\r\n\tconst trns = [];\r\n\r\n\t// console.log(`astData`, astData)\r\n\r\n\tif (selectedRows.lenght === 0) return trns;\r\n\r\n\tif (selectedRows) {\r\n\t\tselectedRows.map(row => {\r\n\t\t\t// if trnType is inspection, get all asts in the erf and create astData for each\r\n\r\n\t\t\tlet astData = {};\r\n\t\t\tif (trnType === \"inspection\") {\r\n\t\t\t\tastData = getTrnObjectsArray(row);\r\n\t\t\t\t// console.log(`astData`, astData);\r\n\t\t\t\tif (!astData) return null;\r\n\t\t\t}\r\n\r\n\t\t\t// const { astsInErf, astsCount } = trnObjectsArray;\r\n\t\t\t// console.log(`astsInErf`, astsInErf);\r\n\t\t\t// console.log(`trnType`, trnType);\r\n\r\n\t\t\tif (\r\n\t\t\t\ttrnType === \"installation\" ||\r\n\t\t\t\ttrnType === \"audit\" ||\r\n\t\t\t\ttrnType === \"inspection\"\r\n\t\t\t) {\r\n\t\t\t\t// console.log(`push trn`);\r\n\t\t\t\tconst trn = {\r\n\t\t\t\t\tmetaData: {\r\n\t\t\t\t\t\tcreatedAtDatetime: Timestamp.now(),\r\n\t\t\t\t\t\tcreatedByUser: user.displayName,\r\n\t\t\t\t\t\tcreatedByUserId: user.uid,\r\n\t\t\t\t\t\tupdatedAtDatetime: Timestamp.now(),\r\n\t\t\t\t\t\tupdatedByUser: user.displayName,\r\n\t\t\t\t\t\ttrnHistory: 0, // how many times transaction has been updated\r\n\t\t\t\t\t\ttrnType: trnType, //['installation', 'inspection', 'audit']\r\n\t\t\t\t\t\ttrnNo: \"\",\r\n\t\t\t\t\t\ttrnState: \"draft\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\terfData: row,\r\n\t\t\t\t\tastData,\r\n\t\t\t\t};\r\n\t\t\t\t// console.log(`trn`, trn);\r\n\t\t\t\treturn trns.push(trn);\r\n\t\t\t}\r\n\t\t});\r\n\t\t// console.log(`trns`, trns);\r\n\t\treturn trns;\r\n\t}\r\n};\r\n\r\nconst trnOptions = [\r\n\t{ key: \"choose\", value: \"choose\" },\r\n\t{ key: \"audit\", value: \"audit\" },\r\n\t{ key: \"inspection\", value: \"inspection\" },\r\n\t// { key: \"installation\", value: \"installation\" },\r\n];\r\n\r\nconst TabsErfs = props => {\r\n\t// console.log(`TabsErfs props`, props);\r\n\r\n\tconst [trnType, setTrnType] = useState(\"\");\r\n\t// console.log(`trnType`, trnType);\r\n\r\n\tconst { purpose } = props;\r\n\t// console.log(`purpose`, purpose);\r\n\r\n\tconst [active, setActive] = useState(\"tabs-map\");\r\n\r\n\tconst [selectedRows, setSelectedRows] = useState([]);\r\n\t// console.log(`selectedRows`, selectedRows);\r\n\r\n\tconst { openModal } = useModal();\r\n\tconst { user } = useAuthContext();\r\n\r\n\tconst handleTabClick = e => {\r\n\t\t// console.log(`e.target.id`, e.target.id)\r\n\t\tsetActive(e.target.id);\r\n\t};\r\n\r\n\tconst createNewTrns = () => {\r\n\t\t// console.log(`trnType`, trnType);\r\n\t\tif (trnType) {\r\n\t\t\t// open a modal to preview the new trns only of there is trnType. The new trn btn is diabled if no trn type is selected\r\n\t\t\tconst newTrnsArray = getNewTrnsArray(selectedRows, trnType, user);\r\n\t\t\t// console.log(`newTrnsArray`, newTrnsArray);\r\n\t\t\t// step 2: open the modal. It wil be from the modal that the new trns will be sent to firebase\r\n\t\t\tif (newTrnsArray.length > 0) {\r\n\t\t\t\topenModal({\r\n\t\t\t\t\tmodalName: \"tableTrnsFromErfs\",\r\n\t\t\t\t\tpayload: { newTrnsArray, trnType },\r\n\t\t\t\t});\r\n\t\t\t\tsetTrnType(\"choose\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTrnType(\"choose\");\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"tabs\">\r\n\t\t\t<div className=\"tabs-header\">\r\n\t\t\t\t<div className=\"tab-title\">\r\n\t\t\t\t\t<p>Erfs Table</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* new trsnaction btn */}\r\n\t\t\t\t{purpose === \"firestoreErfs\" ? (\r\n\t\t\t\t\t<div className=\"new-trn-div\">\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"new-trn new-trn-btn\"\r\n\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\ttrnType === \"choose\" || selectedRows.length === 0 ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={createNewTrns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNT\r\n\t\t\t\t\t\t</button>{\" \"}\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"new-trn new-trn-select\"\r\n\t\t\t\t\t\t\tvalue={trnType}\r\n\t\t\t\t\t\t\tonChange={e => setTrnType(e.target.value)}\r\n\t\t\t\t\t\t\tplaceholder=\"Store Name\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{trnOptions &&\r\n\t\t\t\t\t\t\t\ttrnOptions.map(trn => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<option key={trn.key} value={trn.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t{trn.value}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* tabs */}\r\n\t\t\t\t<div className=\"tabs-btns\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`tabs-header-table ${\r\n\t\t\t\t\t\t\tactive === \"tabs-table\" ? \"tab-active\" : \"\"\r\n\t\t\t\t\t\t} tabs-tab`}\r\n\t\t\t\t\t\tid=\"tabs-table\"\r\n\t\t\t\t\t\tonClick={handleTabClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTable\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`tabs-header-map ${\r\n\t\t\t\t\t\t\tactive === \"tabs-map\" ? \"tab-active\" : \"\"\r\n\t\t\t\t\t\t} tabs-tab`}\r\n\t\t\t\t\t\tid=\"tabs-map\"\r\n\t\t\t\t\t\tonClick={handleTabClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMap\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <div\r\n\t\t\t\t\t\tclassName={`tabs-header-tree ${\r\n\t\t\t\t\t\t\tactive === \"tabs-tree\" ? \"tab-active\" : \"\"\r\n\t\t\t\t\t\t} tabs-tab`}\r\n\t\t\t\t\t\tid=\"tabs-tree\"\r\n\t\t\t\t\t\tonClick={handleTabClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTree\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <div className=\"tab-name\">{ml1}</div> */}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tabs-body\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`tabs-body-content tabs-table ${\r\n\t\t\t\t\t\tactive === \"tabs-table\" ? \"tabs-show\" : \"tabs-hide\"\r\n\t\t\t\t\t}  `}\r\n\t\t\t\t\tid=\"tabs-table\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<TabsErfsTable {...props} setSelectedRows={setSelectedRows} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`tabs-body-content tabs-map ${\r\n\t\t\t\t\t\tactive === \"tabs-map\" ? \"tabs-show\" : \"tabs-hide\"\r\n\t\t\t\t\t} `}\r\n\t\t\t\t\tid=\"tabs-map\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* <TabsErfsMap {...props} /> */}\r\n\t\t\t\t\t<TabsErfsClusterMap {...props} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`tabs-body-content tabs-tree ${\r\n\t\t\t\t\t\tactive === \"tabs-tree\" ? \"tabs-show\" : \"tabs-hide\"\r\n\t\t\t\t\t} `}\r\n\t\t\t\t\tid=\"tabs-tree\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* <TabsErfsTree {...props} /> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TabsErfs;\r\n"],"names":["props","_jsx","className","children","Marker","_ref","areaCenter","lat","lng","TabsErfsClusterMap","area","useContext","AreaTreeContext","mapRef","useRef","openModal","useModal","_useState","useState","rowData","_useState2","_slicedToArray","erfs","setErfs","useEffect","_useGeoLocation","useGeoLocation","points","setGeolocation","userGps","map","erf","type","properties","cluster","erfId","id","geometry","coordinates","parseFloat","address","gps","longitude","latitude","_useState3","_useState4","bounds","setBounds","_useState5","_useState6","zoom","setZoom","result","useSupercluster","options","radius","maxZoom","clusters","supercluster","_useState7","_useState8","selectedErf","setSelectedErf","_useState9","_useState10","erfSearch","setErfSearch","_useState11","_useState12","filteredErfs","setFilteredErfs","filter","erfNo","includes","hideShow","length","_selectedErf$address","_selectedErf$address$","_selectedErf$address2","_selectedErf$address3","_mapRef$current","_mapRef$current2","current","panTo","_mapRef$current4","_mapRef$current4$data","_mapRef$current6","_mapRef$current6$data","_mapRef$current7","_mapRef$current7$data","_mapRef$current8","_mapRef$current8$data","_mapRef$current9","_mapRef$current9$data","_mapRef$current10","_mapRef$current10$dat","_mapRef$current11","_mapRef$current11$dat","data","forEach","feature","_mapRef$current5","remove","name","loadGeoJson","lesediObedNkosiA","lesediObedNkosiB","lesediObedNkosiC","_jsxs","placeholder","onChange","e","target","value","concat","_erf$propertyType","_erf$propertyType2","_erf$propertyType3","_erf$propertyType4","unitName","propertyType","unitNo","onClick","selectErf","GoogleMapReact","bootstrapURLKeys","key","process","defaultCenter","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","mapObjects","_mapRef$current3","_mapRef$current3$data","maps","setStyle","fillOpacity","args","console","log","nw","se","mapTypeControl","overviewMapControl","rotateControl","fullscreenControl","_cluster$properties2","_cluster$properties2$","_cluster$properties3","_cluster$properties3$","_cluster$properties4","_cluster$properties4$","_cluster$properties4$2","_cluster$properties5","_cluster$properties5$","_cluster$properties5$2","_cluster$geometry$coo","_cluster$properties","isCluster","pointCount","point_count","hasAsts","asts","style","width","height","expansionZoom","Math","min","getClusterExpansionZoom","_mapRef$current12","find","modalName","payload","handleMarkerClick","showTableAddRecordBtn","ml1","ml2","ml3","nfd","fn","TableAddRecordBtn","tn","columnDefs","setSelectedRows","_Fragment","TableWrapper","Table","getNewTrnsArray","selectedRows","trnType","user","trns","lenght","row","astData","ast","astId","astCat","astCartegory","trnData","formSects","inspection","_objectSpread","astIdExist","some","trnMetaData","astTrnName","Object","entries","astIdIndex","findIndex","_defineProperty","push","getTrnObjectsArray","trn","metaData","createdAtDatetime","Timestamp","now","createdByUser","displayName","createdByUserId","uid","updatedAtDatetime","updatedByUser","trnHistory","trnNo","trnState","erfData","trnOptions","setTrnType","purpose","active","setActive","useAuthContext","handleTabClick","disabled","newTrnsArray","TabsErfsTable"],"sourceRoot":""}