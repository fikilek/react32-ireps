{"version":3,"file":"static/js/888.b46e351f.chunk.js","mappings":"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","sources":["components/table/TableWrapper.jsx","components/tabs/erfsTabs/tabsMap/TabsErfsClusterMap.jsx","components/tabs/erfsTabs/tabsTable/TabsErfsTable.jsx","components/tabs/erfsTabs/TabsErfs.jsx"],"sourcesContent":["import React from 'react'\nimport './TableWrapper.css'\n\nconst TableWrapper = (props) => {\n  return (\n    <div className='table-wrapper' >\n      {props.children}\n    </div>\n  )\n}\n\nexport default TableWrapper","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport useSupercluster from \"use-supercluster\";\nimport \"./TabsErfsClusterMap.css\";\n// import ratandab from \"../../../../data/cadastral/lesedi/ratandab.geojson\";\nimport lesediObedNkosiA from \"../../../../data/cadastral/lesedi/ObedNkosi/lesediObedNkosiA.geojson\";\nimport lesediObedNkosiB from \"../../../../data/cadastral/lesedi/ObedNkosi/lesediObedNkosiB.geojson\";\nimport lesediObedNkosiC from \"../../../../data/cadastral/lesedi/ObedNkosi/lesediObedNkosiC.geojson\";\nimport useModal from \"../../../../hooks/useModal\";\nimport useGeoLocation from \"../../../../hooks/useGeolocation\";\nimport { AreaTreeContext } from \"../../../../contexts/AreaTreeContext\";\n\nconst Marker = ({ children }) => children;\n\nconst areaCenter = {\n\t\"Obed Nkosi A\": { lat: -26.541960658447646, lng: 28.338629116440828 },\n\t\"Obed Nkosi B\": { lat: -26.52888160075503, lng: 28.3352936276032 },\n\t\"Obed Nkosi C\": { lat: -26.532998883501552, lng: 28.345134598723572 },\n};\n\nexport function TabsErfsClusterMap(props) {\n\t// console.log(`props`, props);\n\n\tconst { area } = useContext(AreaTreeContext);\n\t// console.log(`area`, area);\n\n\tconst mapRef = useRef();\n\t// console.log(`mapRef`, mapRef);\n\n\tconst { openModal } = useModal();\n\n\tconst [erfs, setErfs] = useState(props.rowData);\n\t// console.log(`erfs`, erfs);\n\n\tuseEffect(() => {\n\t\tsetErfs(props.rowData);\n\t}, [props.rowData]);\n\n\t// get user location\n\tconst { setGeolocation, userGps } = useGeoLocation();\n\t// console.log(`userGps`, userGps);\n\n\t// setGeolocation();\n\n\tconst points = erfs?.map(erf => {\n\t\t// console.log(`erf`, erf);\n\t\t// const lat = erf.address.gps.latitude;\n\t\t// const lng = erf.address.gps.longitude;\n\n\t\treturn {\n\t\t\ttype: \"Feature\",\n\t\t\tproperties: { cluster: false, erfId: erf.id, erf: erf },\n\t\t\tgeometry: {\n\t\t\t\ttype: \"Point\",\n\t\t\t\tcoordinates: [\n\t\t\t\t\tparseFloat(erf.address.gps.longitude),\n\t\t\t\t\tparseFloat(erf.address.gps.latitude),\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t});\n\t// console.log(`points`, points);\n\n\tconst [bounds, setBounds] = useState([]);\n\t// console.log(`bounds`, bounds);\n\tconst [zoom, setZoom] = useState(10);\n\t// console.log(`zoom`, zoom)\n\n\t// console.log(`######################################################`);\n\t// console.log(`bounds`, bounds);\n\t// console.log(`zoom`, zoom);\n\n\tconst result = useSupercluster({\n\t\tpoints,\n\t\tbounds,\n\t\tzoom,\n\t\toptions: { radius: 75, maxZoom: 20 },\n\t});\n\n\tconst { clusters, supercluster } = result;\n\t// console.log(`clusters`, clusters);\n\t// console.log(`supercluster`, supercluster);\n\n\t// erf search/filter *************************************************\n\n\tconst [selectedErf, setSelectedErf] = useState(\"\");\n\t// console.log(`selectedErf`, selectedErf);\n\tconst [erfSearch, setErfSearch] = useState(\"\");\n\t// console.log(`erfSearch`, erfSearch);\n\tconst [filteredErfs, setFilteredErfs] = useState(\"\");\n\t// console.log(`filteredErfs`, filteredErfs);\n\n\tuseEffect(() => {\n\t\t// console.log(`erfs`, erfs);\n\t\tconst filteredErfs = erfs?.filter(erf => erf.erfNo.includes(erfSearch));\n\t\t// console.log(`filteredErfs`, filteredErfs);\n\t\tsetFilteredErfs(filteredErfs);\n\t}, [erfSearch]);\n\n\t// console.log(`erfSearch.length`, erfSearch.length);\n\tconst hideShow = erfSearch?.length > 0 ? \"show-erfs\" : \"hide-erfs\";\n\n\tuseEffect(() => {\n\t\tif (selectedErf) {\n\t\t\tconst lat = selectedErf?.address?.gps?.latitude;\n\t\t\tconst lng = selectedErf?.address?.gps?.longitude;\n\t\t\t// console.log(`mapRef.current`, mapRef.current);\n\t\t\t// console.log(`zoom`, zoom);\n\t\t\tmapRef.current?.panTo({ lat, lng });\n\t\t\tmapRef.current?.setZoom(20);\n\t\t}\n\t}, [selectedErf]);\n\n\tconst selectErf = erf => {\n\t\t// console.log(`erf`, erf);\n\t\tsetSelectedErf(erf);\n\t};\n\n\tconst onMapLoad = mapObjects => {\n\t\t// console.log(`myMapObjects`, mapObjects);\n\t\tconst { map, maps } = mapObjects;\n\t\t// console.log(`mapRef`, mapRef);\n\t\tmapRef.current = map;\n\t\t// console.log(`mapRef`, mapRef);\n\n\t\t// const fileSelected = selectedArea[area.name];\n\t\t// console.log(`fileSelected`, fileSelected);\n\n\t\t// mapRef.current?.data?.loadGeoJson(fileSelected);\n\n\t\tmapRef.current?.data?.setStyle({\n\t\t\tfillOpacity: 0.0,\n\t\t});\n\t\t// mapRef.data.addListener(\"click\", handleErfClick);\n\t};\n\n\tuseEffect(() => {\n\t\t// console.log(`area`, area);\n\t\t// console.log(`mapRef.current?.data`, mapRef.current?.data);\n\t\t// console.log(`mapRef.current`, mapRef.current);\n\t\t// const fileSelected = selectedArea[area.name];\n\t\t// console.log(`fileSelected`, fileSelected);\n\t\tmapRef.current?.data?.forEach(function (feature) {\n\t\t\t// console.log(`feature`, feature);\n\t\t\tmapRef.current?.data.remove(feature);\n\t\t});\n\n\t\tif (area?.name === \"Obed Nkosi A\") {\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiA);\n\t\t}\n\t\tif (area?.name === \"Obed Nkosi B\") {\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiB);\n\t\t}\n\t\tif (area?.name === \"Obed Nkosi C\") {\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiC);\n\t\t}\n\t\tif (area?.name === \"Obed Mthombeni Nkosi\") {\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiA);\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiB);\n\t\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiC);\n\t\t}\n\t}, [area]);\n\n\t// this will fire everytime there is a click on the marker\n\tconst handleMarkerClick = (id, lat, lng) => {\n\t\tmapRef.current?.panTo({ lat, lng });\n\n\t\t// get erf data using erf id\n\t\tconst erf = erfs.find(erf => erf.id === id);\n\t\t// console.log(`erf`, erf);\n\n\t\tif (erf) {\n\t\t\topenModal({\n\t\t\t\tmodalName: \"tabsErfMapInfoWrapper\",\n\t\t\t\tpayload: erf,\n\t\t\t});\n\t\t}\n\t};\n\n\t// map options\n\tvar options = {\n\t\t// panControl: true,\n\t\t// zoomControl: true,\n\t\tmapTypeControl: true,\n\t\t// scaleControl: true,\n\t\t// streetViewControl: true,\n\t\toverviewMapControl: true,\n\t\trotateControl: true,\n\t\tfullscreenControl: false,\n\t};\n\n\treturn (\n\t\t<div className=\"tabs-erfs-map\">\n\t\t\t<div className=\"search-box\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"erf-search\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\" enter erf no\"\n\t\t\t\t\tonChange={e => setErfSearch(e.target.value)}\n\t\t\t\t\tvalue={erfSearch}\n\t\t\t\t/>\n\t\t\t\t<div className={`search-dropdown ${hideShow} `}>\n\t\t\t\t\t{filteredErfs &&\n\t\t\t\t\t\tfilteredErfs?.map(erf => {\n\t\t\t\t\t\t\t// console.log(`erf`, erf);\n\t\t\t\t\t\t\tconst erfNo = erf?.erfNo;\n\t\t\t\t\t\t\tconst unitName = erf.propertyType?.unitName\n\t\t\t\t\t\t\t\t? `| ${erf.propertyType?.unitName}`\n\t\t\t\t\t\t\t\t: \"\";\n\t\t\t\t\t\t\tconst unitNo = erf.propertyType?.unitNo\n\t\t\t\t\t\t\t\t? `| ${erf.propertyType?.unitNo}`\n\t\t\t\t\t\t\t\t: \"\";\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<p key={erf.id} onClick={() => selectErf(erf)}>\n\t\t\t\t\t\t\t\t\t{`${erfNo} ${unitName} ${unitNo} `}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<GoogleMapReact\n\t\t\t\tbootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\n\t\t\t\tdefaultCenter={{ lat: -26.135604364944857, lng: 28.688087871069888 }}\n\t\t\t\tcenter={areaCenter[area.name]}\n\t\t\t\tdefaultZoom={16}\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\tonGoogleApiLoaded={onMapLoad}\n\t\t\t\tonChange={args => {\n\t\t\t\t\t// console.log(`args`, args);\n\t\t\t\t\tconst { zoom, bounds } = args;\n\t\t\t\t\tsetZoom(zoom);\n\t\t\t\t\tsetBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n\t\t\t\t}}\n\t\t\t\toptions={options}\n\t\t\t>\n\t\t\t\t{clusters.map(cluster => {\n\t\t\t\t\t// console.log(`cluster?.properties?.erf`, cluster?.properties?.erf);\n\n\t\t\t\t\tconst anomaly = false;\n\n\t\t\t\t\tconst [longitude, latitude] = cluster.geometry.coordinates;\n\t\t\t\t\tconst { cluster: isCluster, point_count: pointCount } = cluster.properties;\n\t\t\t\t\tconst erfNo = cluster?.properties?.erf?.erfNo;\n\t\t\t\t\tconst id = cluster?.properties?.erf?.id;\n\t\t\t\t\tconst hasAsts =\n\t\t\t\t\t\tcluster?.properties?.erf?.asts?.length > 0 ? \"has-asts\" : \"\";\n\n\t\t\t\t\tif (cluster?.properties?.erf?.asts?.length > 0) {\n\t\t\t\t\t\t// console.log(`erf with asts`, cluster?.properties?.erf);\n\t\t\t\t\t}\n\t\t\t\t\tconst hasAnomaly = anomaly ? \"has-anomaly\" : \"\";\n\n\t\t\t\t\tif (isCluster) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Marker key={`${cluster.id}`} lat={latitude} lng={longitude}>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"cluster-marker\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: `${10 + (pointCount / points.length) * 20}px`,\n\t\t\t\t\t\t\t\t\t\theight: `${10 + (pointCount / points.length) * 20}px`,\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#ff66ff\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tconst expansionZoom = Math.min(\n\t\t\t\t\t\t\t\t\t\t\tsupercluster.getClusterExpansionZoom(cluster.id),\n\t\t\t\t\t\t\t\t\t\t\t20\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tmapRef.current.setZoom(expansionZoom);\n\t\t\t\t\t\t\t\t\t\tmapRef.current.panTo({ lat: latitude, lng: longitude });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{pointCount}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\tkey={`${cluster.properties.erfId}`}\n\t\t\t\t\t\t\tlat={latitude}\n\t\t\t\t\t\t\tlng={longitude}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`erf-marker`}\n\t\t\t\t\t\t\t\tonClick={() => handleMarkerClick(id, latitude, longitude)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className={`erf-no ${hasAsts} ${hasAnomaly}`}>{erfNo}</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Marker>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<Marker\n\t\t\t\t\tposition={{ lat: userGps.coordinates.lat, lng: userGps.coordinates.lng }}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"userGpsPosition\"></div>\n\t\t\t\t</Marker>\n\t\t\t</GoogleMapReact>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./tabsErfsTable.css\";\n\nimport \"react-tippy/dist/tippy.css\";\nimport Table from \"../../../table/Table\";\nimport TableAddRecordBtn from \"../../../table/tableBtns/TableAddRecordBtn\";\nimport TableWrapper from \"../../../table/TableWrapper\";\n\nconst showTableAddRecordBtn = (ml1, ml2, ml3, nfd, fn) => {\n\tif (ml1 === \"asts\" || ml1 === \"trns\" || ml1 === \"erfs\") return null;\n\treturn <TableAddRecordBtn nfd={nfd} fn={fn} />;\n};\n\nconst TabsErfsTable = props => {\n\t// console.log(`props`, props);\n\tconst { ml1, tn, ml3, nfd, fn, rowData, columnDefs, setSelectedRows } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<TableWrapper rowData={rowData} columnDefs={columnDefs} ml1={ml1}>\n\t\t\t\t<Table\n\t\t\t\t\trowData={rowData}\n\t\t\t\t\tcolumnDefs={columnDefs}\n\t\t\t\t\tsetSelectedRows={setSelectedRows}\n\t\t\t\t\tml1={ml1}\n\t\t\t\t/>\n\t\t\t</TableWrapper>\n\n\t\t\t{showTableAddRecordBtn(ml1, tn, ml3, nfd, fn)}\n\t\t</>\n\t);\n};\n\nexport default TabsErfsTable;\n\n// TODO: mouse over tips on the table skipHeader\n","import { Timestamp } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { timestamp } from \"../../../firebaseConfig/fbConfig\";\nimport useAuthContext from \"../../../hooks/useAuthContext\";\nimport useModal from \"../../../hooks/useModal\";\nimport { formSects } from \"../../forms/formComponents/formSections/formSects\";\nimport \"./TabsErfs.css\";\nimport { TabsErfsClusterMap } from \"./tabsMap/TabsErfsClusterMap\";\n// import TabsErfsMap from \"./tabsMap/TabsErfsMap\";\nimport TabsErfsTable from \"./tabsTable/TabsErfsTable\";\nimport TabsErfsTree from \"./tabsTree/TabsErfsTree\";\n\n// prepare asts for trn by going to th erf and get each ast in the erf and prepare an array of all of them\nconst getTrnObjectsArray = erf => {\n\tconsole.log(`erf`, erf);\n\n\t// an erf already has an array of all asts in it. They are in asts property. Go inside asts property and extract needed astData as well as catInstallation ( and catCommissining data if it there).\n\n\t// step 1: destructire asts array\n\tconst { asts } = erf;\n\tconsole.log(`asts`, asts);\n\n\tif (!asts) return null;\n\n\t// create astData object. THis will go into trn inspection object\n\tconst astData = {};\n\n\t// step 2: iterate through asts to get each ast\n\tasts &&\n\t\tasts.forEach(ast => {\n\t\t\t// console.log(`ast---------------------------------`, ast);\n\n\t\t\t// destructure astId\n\t\t\tconst { astId } = ast;\n\t\t\tconsole.log(`astId`, astId);\n\n\t\t\t// get astCat from ast\n\t\t\tconst astCat = ast.astData.astCartegory;\n\t\t\t// console.log(`astCat`, astCat);\n\n\t\t\t// get trnData from formSects and insert into ast\n\t\t\tconst { trnData } = formSects[astCat].inspection;\n\t\t\t// console.log(`trnData`, trnData);\n\n\t\t\t// insrt into ast\n\t\t\tast = {\n\t\t\t\t...ast,\n\t\t\t\ttrnData,\n\t\t\t};\n\n\t\t\tif (astCat) {\n\t\t\t\tif (!astData[astCat]) {\n\t\t\t\t\t// we dont have astData[astCat], create it\n\t\t\t\t\tastData[astCat] = [];\n\t\t\t\t\t// console.log(`astData[astCat]`, astData[astCat]);\n\n\t\t\t\t\t// remove trnMetaData rom ast\n\t\t\t\t\tdelete ast.trnMetaData;\n\t\t\t\t\t// console.log(`ast`, ast);\n\n\t\t\t\t\t// push trnObject into astData[astCat]\n\t\t\t\t\tastData[astCat].push(ast);\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(`astCat [${astCat}] alrerady EXIST in the mix`);\n\n\t\t\t\t\t// we already have astData[astCat]. Check is astId is already present in astData[astCat].\n\t\t\t\t\tconst astIdExist = astData[astCat].some(ast => ast.astId === astId);\n\t\t\t\t\tif (astIdExist) {\n\t\t\t\t\t\t// There already is astId in the mix\n\t\t\t\t\t\t// console.log(`There is astId`, astId);\n\n\t\t\t\t\t\t// removeastData and trnMetaData rom ast\n\t\t\t\t\t\tdelete ast.trnMetaData;\n\t\t\t\t\t\tdelete ast.astData;\n\t\t\t\t\t\tdelete ast.astId;\n\t\t\t\t\t\t// console.log(`ast`, ast);\n\n\t\t\t\t\t\t// extract data\n\t\t\t\t\t\tconst astTrnName = Object.entries(ast)[0][0];\n\t\t\t\t\t\t// console.log(`astTrnName`, astTrnName);\n\n\t\t\t\t\t\t// fint the index of the existing astId\n\t\t\t\t\t\tconst astIdIndex = astData[astCat].findIndex(ast => ast.astId === astId);\n\t\t\t\t\t\t// console.log(`astIdIndex`, astIdIndex);\n\n\t\t\t\t\t\t// insert ast into astData.[astCat][index]\n\t\t\t\t\t\tastData[astCat][astIdIndex] = {\n\t\t\t\t\t\t\t...astData[astCat][astIdIndex],\n\t\t\t\t\t\t\t[astTrnName]: ast[astTrnName],\n\t\t\t\t\t\t\t// trnData\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// astData[astCat].with(Number(astIdIndex), ast[`${astCat}Commissioning`] );\n\t\t\t\t\t\t// console.log(`astData[astCat][astIdIndex]`, astData[astCat][astIdIndex]);\n\t\t\t\t\t\t// console.log(`astData[${astCat}]`, astData[astCat]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// there is no astId yet\n\t\t\t\t\t\t// console.log(`There is NO astId`, astId);\n\t\t\t\t\t\t// push trnObject into astData[astCat]\n\t\t\t\t\t\tastData[astCat].push(ast);\n\t\t\t\t\t\t// console.log(`astData[astCat]`, astData[astCat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t// console.log(`astData`, astData);\n\n\treturn astData;\n};\n\n// create a trn for each row {metaData, erfData, tranData}\nconst getNewTrnsArray = (selectedRows, trnType, user) => {\n\t// console.log(`selectedRows`, selectedRows);\n\tconst trns = [];\n\n\t// console.log(`astData`, astData)\n\n\tif (selectedRows.lenght === 0) return trns;\n\n\tif (selectedRows) {\n\t\tselectedRows.map(row => {\n\t\t\t// if trnType is inspection, get all asts in the erf and create astData for each\n\n\t\t\tlet astData = {};\n\t\t\tif (trnType === \"inspection\") {\n\t\t\t\tastData = getTrnObjectsArray(row);\n\t\t\t\t// console.log(`astData`, astData);\n\t\t\t\tif (!astData) return null;\n\t\t\t}\n\n\t\t\t// const { astsInErf, astsCount } = trnObjectsArray;\n\t\t\t// console.log(`astsInErf`, astsInErf);\n\t\t\t// console.log(`trnType`, trnType);\n\n\t\t\tif (\n\t\t\t\ttrnType === \"installation\" ||\n\t\t\t\ttrnType === \"audit\" ||\n\t\t\t\ttrnType === \"inspection\"\n\t\t\t) {\n\t\t\t\t// console.log(`push trn`);\n\t\t\t\tconst trn = {\n\t\t\t\t\tmetaData: {\n\t\t\t\t\t\tcreatedAtDatetime: Timestamp.now(),\n\t\t\t\t\t\tcreatedByUser: user.displayName,\n\t\t\t\t\t\tcreatedByUserId: user.uid,\n\t\t\t\t\t\tupdatedAtDatetime: Timestamp.now(),\n\t\t\t\t\t\tupdatedByUser: user.displayName,\n\t\t\t\t\t\ttrnHistory: 0, // how many times transaction has been updated\n\t\t\t\t\t\ttrnType: trnType, //['installation', 'inspection', 'audit']\n\t\t\t\t\t\ttrnNo: \"\",\n\t\t\t\t\t\ttrnState: \"draft\",\n\t\t\t\t\t},\n\t\t\t\t\terfData: row,\n\t\t\t\t\tastData,\n\t\t\t\t};\n\t\t\t\t// console.log(`trn`, trn);\n\t\t\t\treturn trns.push(trn);\n\t\t\t}\n\t\t});\n\t\t// console.log(`trns`, trns);\n\t\treturn trns;\n\t}\n};\n\nconst trnOptions = [\n\t{ key: \"choose\", value: \"choose\" },\n\t{ key: \"audit\", value: \"audit\" },\n\t{ key: \"inspection\", value: \"inspection\" },\n\t// { key: \"installation\", value: \"installation\" },\n];\n\nconst TabsErfs = props => {\n\t// console.log(`TabsErfs props`, props);\n\n\tconst [trnType, setTrnType] = useState(\"\");\n\t// console.log(`trnType`, trnType);\n\n\tconst { purpose } = props;\n\t// console.log(`purpose`, purpose);\n\n\tconst [active, setActive] = useState(\"tabs-map\");\n\n\tconst [selectedRows, setSelectedRows] = useState([]);\n\t// console.log(`selectedRows`, selectedRows);\n\n\tconst { openModal } = useModal();\n\tconst { user } = useAuthContext();\n\n\tconst handleTabClick = e => {\n\t\t// console.log(`e.target.id`, e.target.id)\n\t\tsetActive(e.target.id);\n\t};\n\n\tconst createNewTrns = () => {\n\t\t// console.log(`trnType`, trnType);\n\t\tif (trnType) {\n\t\t\t// open a modal to preview the new trns only of there is trnType. The new trn btn is diabled if no trn type is selected\n\t\t\tconst newTrnsArray = getNewTrnsArray(selectedRows, trnType, user);\n\t\t\t// console.log(`newTrnsArray`, newTrnsArray);\n\t\t\t// step 2: open the modal. It wil be from the modal that the new trns will be sent to firebase\n\t\t\tif (newTrnsArray.length > 0) {\n\t\t\t\topenModal({\n\t\t\t\t\tmodalName: \"tableTrnsFromErfs\",\n\t\t\t\t\tpayload: { newTrnsArray, trnType },\n\t\t\t\t});\n\t\t\t\tsetTrnType(\"choose\");\n\t\t\t}\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetTrnType(\"choose\");\n\t}, []);\n\n\treturn (\n\t\t<div className=\"tabs\">\n\t\t\t<div className=\"tabs-header\">\n\t\t\t\t<div className=\"tab-title\">\n\t\t\t\t\t<p>Erfs Table</p>\n\t\t\t\t</div>\n\n\t\t\t\t{/* new trsnaction btn */}\n\t\t\t\t{purpose === \"firestoreErfs\" ? (\n\t\t\t\t\t<div className=\"new-trn-div\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"new-trn new-trn-btn\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\ttrnType === \"choose\" || selectedRows.length === 0 ? true : false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={createNewTrns}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNT\n\t\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tclassName=\"new-trn new-trn-select\"\n\t\t\t\t\t\t\tvalue={trnType}\n\t\t\t\t\t\t\tonChange={e => setTrnType(e.target.value)}\n\t\t\t\t\t\t\tplaceholder=\"Store Name\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{trnOptions &&\n\t\t\t\t\t\t\t\ttrnOptions.map(trn => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={trn.key} value={trn.value}>\n\t\t\t\t\t\t\t\t\t\t\t{trn.value}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\n\t\t\t\t{/* tabs */}\n\t\t\t\t<div className=\"tabs-btns\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`tabs-header-table ${\n\t\t\t\t\t\t\tactive === \"tabs-table\" ? \"tab-active\" : \"\"\n\t\t\t\t\t\t} tabs-tab`}\n\t\t\t\t\t\tid=\"tabs-table\"\n\t\t\t\t\t\tonClick={handleTabClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tTable\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`tabs-header-map ${\n\t\t\t\t\t\t\tactive === \"tabs-map\" ? \"tab-active\" : \"\"\n\t\t\t\t\t\t} tabs-tab`}\n\t\t\t\t\t\tid=\"tabs-map\"\n\t\t\t\t\t\tonClick={handleTabClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tMap\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div\n\t\t\t\t\t\tclassName={`tabs-header-tree ${\n\t\t\t\t\t\t\tactive === \"tabs-tree\" ? \"tab-active\" : \"\"\n\t\t\t\t\t\t} tabs-tab`}\n\t\t\t\t\t\tid=\"tabs-tree\"\n\t\t\t\t\t\tonClick={handleTabClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tTree\n\t\t\t\t\t</div> */}\n\t\t\t\t</div>\n\n\t\t\t\t{/* <div className=\"tab-name\">{ml1}</div> */}\n\t\t\t</div>\n\t\t\t<div className=\"tabs-body\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`tabs-body-content tabs-table ${\n\t\t\t\t\t\tactive === \"tabs-table\" ? \"tabs-show\" : \"tabs-hide\"\n\t\t\t\t\t}  `}\n\t\t\t\t\tid=\"tabs-table\"\n\t\t\t\t>\n\t\t\t\t\t<TabsErfsTable {...props} setSelectedRows={setSelectedRows} />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`tabs-body-content tabs-map ${\n\t\t\t\t\t\tactive === \"tabs-map\" ? \"tabs-show\" : \"tabs-hide\"\n\t\t\t\t\t} `}\n\t\t\t\t\tid=\"tabs-map\"\n\t\t\t\t>\n\t\t\t\t\t{/* <TabsErfsMap {...props} /> */}\n\t\t\t\t\t<TabsErfsClusterMap {...props} />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`tabs-body-content tabs-tree ${\n\t\t\t\t\t\tactive === \"tabs-tree\" ? \"tabs-show\" : \"tabs-hide\"\n\t\t\t\t\t} `}\n\t\t\t\t\tid=\"tabs-tree\"\n\t\t\t\t>\n\t\t\t\t\t{/* <TabsErfsTree {...props} /> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TabsErfs;\n"],"names":["props","_jsx","className","children","Marker","_ref","areaCenter","lat","lng","TabsErfsClusterMap","area","useContext","AreaTreeContext","mapRef","useRef","openModal","useModal","erfs","setErfs","useState","rowData","useEffect","setGeolocation","userGps","useGeoLocation","points","map","erf","type","properties","cluster","erfId","id","geometry","coordinates","parseFloat","address","gps","longitude","latitude","bounds","setBounds","zoom","setZoom","result","useSupercluster","options","radius","maxZoom","clusters","supercluster","selectedErf","setSelectedErf","erfSearch","setErfSearch","filteredErfs","setFilteredErfs","filter","erfNo","includes","hideShow","length","_selectedErf$address","_selectedErf$address$","_selectedErf$address2","_selectedErf$address3","_mapRef$current","_mapRef$current2","current","panTo","_mapRef$current4","_mapRef$current4$data","_mapRef$current6","_mapRef$current6$data","_mapRef$current7","_mapRef$current7$data","_mapRef$current8","_mapRef$current8$data","_mapRef$current9","_mapRef$current9$data","_mapRef$current10","_mapRef$current10$dat","_mapRef$current11","_mapRef$current11$dat","data","forEach","feature","_mapRef$current5","remove","name","loadGeoJson","lesediObedNkosiA","lesediObedNkosiB","lesediObedNkosiC","_jsxs","placeholder","onChange","e","target","value","concat","_erf$propertyType","_erf$propertyType2","_erf$propertyType3","_erf$propertyType4","unitName","propertyType","unitNo","onClick","selectErf","GoogleMapReact","bootstrapURLKeys","key","process","defaultCenter","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","mapObjects","_mapRef$current3","_mapRef$current3$data","maps","setStyle","fillOpacity","args","nw","se","mapTypeControl","overviewMapControl","rotateControl","fullscreenControl","_cluster$properties","_cluster$properties$e","_cluster$properties2","_cluster$properties2$","_cluster$properties3","_cluster$properties3$","_cluster$properties3$2","_cluster$properties4","_cluster$properties4$","_cluster$properties4$2","isCluster","point_count","pointCount","hasAsts","asts","style","width","height","backgroundColor","expansionZoom","Math","min","getClusterExpansionZoom","handleMarkerClick","_mapRef$current12","find","modalName","payload","position","showTableAddRecordBtn","ml1","ml2","ml3","nfd","fn","TableAddRecordBtn","tn","columnDefs","setSelectedRows","_Fragment","TableWrapper","Table","getNewTrnsArray","selectedRows","trnType","user","trns","lenght","row","astData","console","log","ast","astId","astCat","astCartegory","trnData","formSects","inspection","astIdExist","some","trnMetaData","astTrnName","Object","entries","astIdIndex","findIndex","push","getTrnObjectsArray","trn","metaData","createdAtDatetime","Timestamp","now","createdByUser","displayName","createdByUserId","uid","updatedAtDatetime","updatedByUser","trnHistory","trnNo","trnState","erfData","trnOptions","setTrnType","purpose","active","setActive","useAuthContext","handleTabClick","disabled","createNewTrns","newTrnsArray","TabsErfsTable"],"sourceRoot":""}