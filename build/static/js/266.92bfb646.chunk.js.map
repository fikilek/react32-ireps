{"version":3,"file":"static/js/266.92bfb646.chunk.js","mappings":"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","sources":["hooks/useLazyCollection.js","components/table/TableWithAddRecordBtn.jsx","hooks/useAstsTable.js","components/table/TableWrapper.jsx","pages/asts/Asts.jsx"],"sourcesContent":["import {\r\n\tcollection,\r\n\tgetCountFromServer,\r\n\tlimit,\r\n\tonSnapshot,\r\n\torderBy,\r\n\tquery,\r\n\tstartAt,\r\n} from \"firebase/firestore\";\r\nimport { useContext, useEffect, useReducer, useRef } from \"react\";\r\nimport { db } from \"../firebaseConfig/fbConfig\";\r\nimport { AstsTableContext } from \"../contexts/AstsTableContext\";\r\n\r\nconst initLazyData = {\r\n\tlazyData: [],\r\n\tlastDoc: null,\r\n\tendOfCOllection: false,\r\n\tfetchQuantity: 50,\r\n\ttotalColCount: 0,\r\n\tprogress: {\r\n\t\tsuccess: null,\r\n\t\terror: null,\r\n\t\tisPending: null,\r\n\t},\r\n};\r\n\r\nexport const lazyReducer = (state, action) => {\r\n\t// console.log(`action`, action);\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\r\n\t\tcase \"PRE_FETCH_SETUP\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprogress: {\r\n\t\t\t\t\t...state.progress,\r\n\t\t\t\t\tisPending: true,\r\n\t\t\t\t\terror: \"\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\tcase \"SUCCESS\":\r\n\t\t\tconsole.log(`SUCCESS action.payload.data`, action.payload?.data);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlazyData: action.payload.data,\r\n\t\t\t\tlastDoc: action.payload.lastDoc,\r\n\t\t\t\tprogress: {\r\n\t\t\t\t\t...state.progress,\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tisPending: false,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase \"SET_COL_COUNT\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalColCount: action.payload,\r\n\t\t\t};\r\n\t\tcase \"ERROR\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprogress: {\r\n\t\t\t\t\t...state.progress,\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t\tisPending: false,\r\n\t\t\t\t\terror: `error fetching lazy load document(s) - ${action.payload}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t}\r\n};\r\n\r\nconst useLazyCollection = props => {\r\n\t// console.log(`props`, props);\r\n\tconst { ml1, ml2, ml3 } = props;\r\n\r\n\tconst { state: st, dispatch: dis } = useContext(AstsTableContext);\r\n\r\n\tconst [lazyState, dispatch] = useReducer(lazyReducer, initLazyData);\r\n\t// console.log(`lazyState`, lazyState);\r\n\r\n\tconst fetchData = useRef((dispatch, lastDoc, fetchQuantity) => {\r\n\t\tconsole.log(`fetchData called`);\r\n\r\n\t\tconst q = query(\r\n\t\t\tcollection(db, ml1),\r\n\t\t\torderBy(\"metaData.updatedAtDatetime\", \"desc\"),\r\n\t\t\tstartAt(lastDoc || \"0\"),\r\n\t\t\tlimit(fetchQuantity)\r\n\t\t);\r\n\r\n\t\tconst unsubscribe = onSnapshot(q, querySnapshot => {\r\n\t\t\t// console.log(`querySnapshot.docs`, querySnapshot.docs);\r\n\r\n\t\t\tconst col = [];\r\n\t\t\tquerySnapshot.forEach(doc => {\r\n\t\t\t\t// console.log(`doc`, doc);\r\n\t\t\t\tconst colData = { id: doc.id, ...doc.data() };\r\n\t\t\t\t// console.log(`ast`, ast);\r\n\t\t\t\tcol.push(colData);\r\n\t\t\t});\r\n\t\t\t// console.log(`asts`, asts);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"SUCCESS\",\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tdata: col,\r\n\t\t\t\t\tlastDoc: querySnapshot.docs[querySnapshot.docs.length - 1],\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tdis({ type: \"SET_FETCH\", payload: false });\r\n\t\t});\r\n\r\n\t\treturn unsubscribe;\r\n\t});\r\n\t// console.log(`fechData.current`, fetchData.current);\r\n\r\n\tuseEffect(() => {\r\n\t\t// perform pre-query setup\r\n\t\t// console.log(`st.fetch`, st.fetch);\r\n\t\t// console.log(`lazyState.inprogress.isPending`, lazyState.progress.isPending);\r\n\t\tconsole.log(`lazyState.lastDoc`, lazyState.lastDoc);\r\n\r\n\t\tconst canFetch = st.fetch && !lazyState.progress.isPending;\r\n\t\tconsole.log(`canFetch`, canFetch);\r\n\r\n\t\ttry {\r\n\t\t\tif (canFetch) {\r\n\t\t\t\tdispatch({ type: \"PRE_FETCH_SETUP\" });\r\n\r\n\t\t\t\tconst unsubscribe = fetchData.current(\r\n\t\t\t\t\tdispatch,\r\n\t\t\t\t\tlazyState.lastDoc,\r\n\t\t\t\t\tlazyState.fetchQuantity\r\n\t\t\t\t);\r\n\t\t\t\treturn () => unsubscribe;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"ERROR\",\r\n\t\t\t\tpayload: error.msg,\r\n\t\t\t});\r\n\t\t}\r\n\t}, [st.fetch, lazyState]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTotalCount = async () => {\r\n\t\t\tconst coll = collection(db, ml1);\r\n\t\t\tconst snapshot = await getCountFromServer(coll);\r\n\t\t\tconst count = snapshot.data().count;\r\n\t\t\t// console.log(`count: ${count}`);\r\n\t\t\tdispatch({ type: \"SET_COL_COUNT\", payload: count });\r\n\t\t};\r\n\t\tgetTotalCount();\r\n\t}, [ml1]);\r\n\r\n\treturn { fetchData, lazyState };\r\n};\r\n\r\nexport default useLazyCollection;\r\n","import React, { useContext } from \"react\";\nimport { irepsDictionary } from \"../../utils/utils\";\nimport Table from \"./Table\";\nimport \"./Table.css\";\nimport \"./TableWithAddRecordBtn.css\";\nimport TableAddRecordBtn from \"./tableBtns/TableAddRecordBtn\";\nimport TableWrapper from \"./TableWrapper\";\nimport { useColDefs } from \"../../hooks/useColDefs\";\nimport { useViewportDimensions } from \"../../hooks/useViewportDimentions\";\nimport { useAstsTable } from \"../../hooks/useAstsTable.js\";\nimport { AstsTableContext } from \"../../contexts/AstsTableContext.js\";\n\nconst showTableAddRecordBtn = (ml1, ml2, ml3, nfd, fn) => {\n\tif (ml1 === \"asts\" || ml1 === \"trns\") return null;\n\treturn <TableAddRecordBtn nfd={nfd} fn={fn} />;\n};\n\n// Suppliers is a page component\nconst TableWithAddRecordBtn = props => {\n\tconsole.log(`Asts - props`, props);\n\tconst { ml1, tn, ml3, nfd, fn } = props;\n\n\t// const {\n\t// \tdata: rowData,\n\t// \terror,\n\t// \tisPending,\n\t// \tsuccess,\n\t// } = useCollection(ml1, tn, ml3);\n\t// const rowData = useMemo(()=>{return data},[data])\n\t// console.log(`rowData`, rowData);\n\n\tconst { state } = useContext(AstsTableContext);\n\t// console.log(`state`, state);\n\n\tuseAstsTable({ ml1, ml2: tn, ml3 });\n\n\tconst { getViewportDimensions } = useViewportDimensions();\n\tconst viewportDimesions = getViewportDimensions();\n\t// console.log(`viewportDimesions`, viewportDimesions);\n\n\tconst { tableFields } = useColDefs({\n\t\tviewportDimesions,\n\t\tml1,\n\t\tml2: tn,\n\t\tml3,\n\t});\n\t// const tableFields = getTableFields();\n\n\t// console.log(`tableFields`, tableFields);\n\t// console.log(`isPending`, isPending);\n\t// console.log(`success`, success);\n\t// console.log(`tn`, tn);\n\tconst ml2 = tn === \"undefined\" ? \"\" : tn;\n\t// console.log(`ml2`, ml2);\n\t// console.log(`ml3`, ml3);\n\t// console.log(`tn`, tn);\n\n\treturn (\n\t\t<div className={`table `}>\n\t\t\t<div className=\"table-header\">\n\t\t\t\t<div className=\"th-menu-levels\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{`\n\t\t\t\t\t\t\t${ml1 ? `${irepsDictionary.get(ml1)}` : \"\"}\n\t\t\t\t\t\t\t${ml2 ? `/ ${irepsDictionary.get(ml2)}s` : \"\"} \n\t\t\t\t\t\t\t${ml3 ? `/ ${irepsDictionary.get(ml3)}s` : \"\"}\n\t\t\t\t\t\t`}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t\t<TableWrapper rowData={state.asts} columnDefs={tableFields} ml1={ml1}>\n\t\t\t\t<Table rowData={state.asts} columnDefs={tableFields} ml1={ml1} />\n\t\t\t</TableWrapper>\n\t\t\t{showTableAddRecordBtn(ml1, tn, ml3, nfd, fn)}\n\t\t</div>\n\t);\n};\nexport default TableWithAddRecordBtn;\n","import { useContext, useEffect } from \"react\";\r\n// import { AstsTableContext } from \"../contexts/AstsTableContext\";\r\nimport useLazyCollection from \"./useLazyCollection\";\r\nimport { AstsTableContext } from \"../contexts/AstsTableContext\";\r\n\r\nexport const useAstsTable = props => {\r\n\tconst { dispatch } = useContext(AstsTableContext);\r\n\t// console.log(`state`, state);\r\n\r\n\tconst { ml1, ml2, ml3 } = props;\r\n\t// get all asts from firestore through useCollection hook\r\n\tconst { lazyState } = useLazyCollection({ ml1, ml2, ml3 });\r\n\tconsole.log(`lazyState`, lazyState);\r\n\r\n\t// generate required stats\r\n\r\n\t// get an array of all existing cats\r\n\tconst catsInAsts = [\r\n\t\t...new Set(lazyState.lazyData.map(item => item.astData.astCartegory)),\r\n\t];\r\n\t// console.log(`catsInAsts`, catsInAsts);\r\n\r\n\t// count occurance of each item in the array\r\n\tconst astsArray = [];\r\n\tcatsInAsts &&\r\n\t\tcatsInAsts.forEach(astCat => {\r\n\t\t\tconst astCount =\r\n\t\t\t\tlazyState.lazyData &&\r\n\t\t\t\tlazyState.lazyData.filter(obj => obj?.astData?.astCartegory === astCat)\r\n\t\t\t\t\t?.length;\r\n\t\t\tastsArray.push({\r\n\t\t\t\tname: astCat,\r\n\t\t\t\tquantity: astCount,\r\n\t\t\t});\r\n\t\t});\r\n\t// console.log(`astsArray`, astsArray);\r\n\r\n\tuseEffect(() => {\r\n\t\t// update total asts in the context\r\n\t\tdispatch({\r\n\t\t\ttype: \"ASTS_TOTALS\",\r\n\t\t\tpayload: {\r\n\t\t\t\tastsTotal: lazyState.totalColCount,\r\n\t\t\t\tastsArray, //this gives quantities of each ast cat\r\n\t\t\t\tasts: lazyState.lazyData,\r\n\t\t\t},\r\n\t\t});\r\n\t}, [lazyState]);\r\n\r\n\t// update AstsTableContext\r\n};\r\n","import React from 'react'\nimport './TableWrapper.css'\n\nconst TableWrapper = (props) => {\n  return (\n    <div className='table-wrapper' >\n      {props.children}\n    </div>\n  )\n}\n\nexport default TableWrapper","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TableWithAddRecordBtn from \"../../components/table/TableWithAddRecordBtn\";\nimport useAuthContext from \"../../hooks/useAuthContext\";\nimport { PropagateLoader } from \"react-spinners\";\nimport NotAuthenticated from \"../auth/NotAuthenticated\";\nimport \"../../components/table/TableUsersList.css\";\n\nconst Asts = () => {\n\t// console.log(`Asts rendering`);\n\tconst { ml2, ml3 } = useParams();\n\t// console.log(`ml2`, ml2)\n\t// console.log(`ml3`, ml3)\n\tconst { user, isAuthReady } = useAuthContext();\n\t// console.log(`user`, user);\n\treturn isAuthReady ? (\n\t\tuser ? (\n\t\t\t<TableWithAddRecordBtn\n\t\t\t\tml1=\"asts\"\n\t\t\t\ttn={ml2}\n\t\t\t\tml3={ml3}\n\t\t\t\tnfd=\"newAstsFormData\"\n\t\t\t\tfn=\"AstsForm\"\n\t\t\t/>\n\t\t) : (\n\t\t\t<NotAuthenticated />\n\t\t)\n\t) : (\n\t\t<div className=\"users-list-loader\">\n\t\t\t<PropagateLoader\n\t\t\t\tcolor=\"orange\"\n\t\t\t\tloading={!isAuthReady}\n\t\t\t\tsize={13}\n\t\t\t\taria-label=\"Loading Spinner\"\n\t\t\t\tdata-testid=\"loader\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Asts;\n"],"names":["initLazyData","lazyData","lastDoc","endOfCOllection","fetchQuantity","totalColCount","progress","success","error","isPending","lazyReducer","state","action","_action$payload","type","console","log","payload","data","concat","props","ml1","ml2","ml3","st","dispatch","dis","useContext","AstsTableContext","lazyState","useReducer","fetchData","useRef","q","query","collection","db","orderBy","startAt","limit","onSnapshot","querySnapshot","col","forEach","doc","colData","id","push","docs","length","useEffect","canFetch","fetch","unsubscribe","current","msg","async","coll","count","getCountFromServer","getTotalCount","showTableAddRecordBtn","nfd","fn","_jsx","TableAddRecordBtn","tn","useLazyCollection","catsInAsts","Set","map","item","astData","astCartegory","astsArray","astCat","_lazyState$lazyData$f","astCount","filter","obj","_obj$astData","name","quantity","astsTotal","asts","useAstsTable","getViewportDimensions","useViewportDimensions","viewportDimesions","tableFields","useColDefs","_jsxs","className","children","irepsDictionary","get","TableWrapper","rowData","columnDefs","Table","Asts","useParams","user","isAuthReady","useAuthContext","TableWithAddRecordBtn","NotAuthenticated","PropagateLoader","color","loading","size"],"sourceRoot":""}